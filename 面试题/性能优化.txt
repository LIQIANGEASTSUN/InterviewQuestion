

性能优化


MipMap 如何使用

现象：卡顿、发热、耗电、闪退、延迟

一个app进程能够使用的内存是有一定限制的，内存过高、内存泄漏


1.降低 DrawCall：24种无法合批的场景 https://github.com/Unity-Technologies

2.静态合批、动态合批，shader 优化，减少pass以及复杂计算，动、静态合批的要求？？   UGUI 合批要求？？

3.资源优化，在压缩不影响效果的情况下尽量选择压缩，用不到的资源不要放在项目中，特别是 Resources目录，因为该目录下的资源都会打包到安装包中，不要相同的资源放到不同的目录

4.LOD层次细节技术   LodGroup，根据物体距离摄像机的距离切换不同的模型，近处的渲染精模，远处的渲染低模

5.Occlusion Culling 遮挡剔除技术，模型背面摄像机看不到的面尽量不渲染

6.Lightmapping 光照贴图技术，对游戏场景进行烘焙

7.Mesh合并

8.资源池的利用：当大量物体需要频繁创建和销毁的时候使用资源池，可以节约性能



https://mp.weixin.qq.com/s/-Zwqm1gFXEPJJWqSM5S4kA
